{"version":3,"sources":["header.js","footer.js","App.js","serviceWorker.js","index.js"],"names":["Main","showDrawer","setState","visible","onClose","addToCart","item","found","updatedCart","state","cart","map","cartItem","name","quantity","push","id","price","nocart","calculateTotal","RemoveCart","onClearArray","total","searchString","items","mobileSearch","handleChange","bind","e","preventDefault","this","axios","get","then","res","data","refs","search","focus","value","_users","trim","toLowerCase","length","filter","user","match","style","position","className","fontSize","fontStyle","color","href","onClick","handleMobileSearch","src","alt","action","method","type","ref","placeholder","onChange","class","title","placement","closable","width","disabled","background","transitionName","transitionEnterTimeout","transitionLeaveTimeout","component","image","React","Component","Footer","App","Boolean","window","location","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.30b60753.chunk.js","sourcesContent":["import React from \"react\";\r\nimport axios from \"axios\";\r\nimport { Drawer } from \"antd\";\r\nclass Main extends React.Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      visible: false,\r\n      searchString: \"\",\r\n      items: [],\r\n      cart: [],\r\n      quantity: 0,\r\n      total: 0,\r\n      mobileSearch: false,\r\n      nocart: false\r\n    };\r\n\r\n    this.handleChange = this.handleChange.bind(this);\r\n  }\r\n  showDrawer = () => {\r\n    this.setState({\r\n      visible: true\r\n    });\r\n  };\r\n\r\n  onClose = () => {\r\n    this.setState({\r\n      visible: false\r\n    });\r\n  };\r\n  handleMobileSearch(e) {\r\n    e.preventDefault();\r\n    this.setState({\r\n      mobileSearch: true\r\n    });\r\n  }\r\n  addToCart = item => {\r\n    var found = false;\r\n    var updatedCart = this.state.cart.map(cartItem => {\r\n      if (cartItem.name == item.name) {\r\n        found = true;\r\n        cartItem.quantity++;\r\n        return cartItem;\r\n      } else {\r\n        return cartItem;\r\n      }\r\n    });\r\n\r\n    if (!found) {\r\n      updatedCart.push({\r\n        id: item.id,\r\n        name: item.name,\r\n        price: item.price,\r\n        quantity: 1\r\n      });\r\n    }\r\n\r\n    this.setState({\r\n      cart: updatedCart,\r\n      nocart: true\r\n    });\r\n    this.setState({\r\n      quantity: this.state.quantity + 1\r\n    });\r\n    this.calculateTotal(item.price);\r\n  };\r\n  RemoveCart = item => {\r\n    var found = false;\r\n    var updatedCart = this.state.cart.map(cartItem => {\r\n      if (cartItem.name == item.name) {\r\n        found = true;\r\n        cartItem.quantity--;\r\n        return cartItem;\r\n      } else {\r\n        return cartItem;\r\n      }\r\n    });\r\n\r\n    if (!found) {\r\n      updatedCart.push({\r\n        id: item.id,\r\n        name: item.name,\r\n        price: item.price,\r\n        quantity: 1\r\n      });\r\n    }\r\n\r\n    this.setState({\r\n      cart: updatedCart\r\n    });\r\n    this.setState({\r\n      quantity: this.state.quantity - 1\r\n    });\r\n    this.calculateTotal(-item.price);\r\n  };\r\n  calculateTotal(price) {\r\n    this.setState({\r\n      total: this.state.total + price\r\n    });\r\n  }\r\n\r\n  componentDidMount() {\r\n    axios.get(`./story.json`).then(res => {\r\n      const items = res.data;\r\n      this.setState({ items });\r\n    });\r\n    this.refs.search.focus();\r\n  }\r\n\r\n  handleChange() {\r\n    this.setState({\r\n      searchString: this.refs.search.value\r\n    });\r\n  }\r\n\r\n  onClearArray = () => {\r\n    this.setState({ cart: [], total: 0, quantity: 0, nocart: false });\r\n  };\r\n\r\n  render() {\r\n    let _users = this.state.items;\r\n\r\n    let search = this.state.searchString.trim().toLowerCase();\r\n\r\n    if (search.length > 0) {\r\n      _users = _users.filter(function(user) {\r\n        let name = user.name;\r\n        return name.toLowerCase().match(search);\r\n      });\r\n    }\r\n\r\n    return (\r\n      <div>\r\n        <header style={{ position: \"fixed\" }}>\r\n          <div className=\"container\">\r\n          <div className=\"brand\">\r\n          \r\n              <h1 style={{ fontSize: \"25px\",fontStyle: \"italic\" ,color: \"#075979\"}}>FOOD COURT</h1>\r\n          </div>\r\n\r\n            <div className=\"search\">\r\n              <a\r\n                className=\"mobile-search\"\r\n                href=\"#\"\r\n                onClick={this.handleMobileSearch.bind(this)}\r\n              >\r\n                <img\r\n                  src=\"https://res.cloudinary.com/sivadass/image/upload/v1494756966/icons/search-green.png\"\r\n                  alt=\"search\"\r\n                />\r\n              </a>\r\n              <form\r\n                action=\"#\"\r\n                method=\"get\"\r\n                className={\r\n                  this.state.mobileSearch ? \"search-form active\" : \"search-form\"\r\n                }\r\n              >\r\n                <input\r\n                  type=\"search\"\r\n                  value={this.state.searchString}\r\n                  ref=\"search\"\r\n                  placeholder=\"Search for Foods and  Snacks\"\r\n                  className=\"search-keyword\"\r\n                  onChange={this.handleChange}\r\n                />\r\n                <button className=\"search-button\" type=\"submit\" />\r\n              </form>\r\n            </div>\r\n\r\n            <div className=\"cart\">\r\n              <button style={{ fontStyle: \"italic\" }} onClick={this.showDrawer}>\r\n                {\" \"}\r\n                Cart ðŸ›’(<span class=\"total-count\">{this.state.quantity}</span>)\r\n              </button>\r\n            </div>\r\n\r\n            <Drawer\r\n              title=\"Cart list\"\r\n              placement=\"right\"\r\n              closable={false}\r\n              onClose={this.onClose}\r\n              visible={this.state.visible}\r\n              width={500}\r\n            >\r\n              {this.state.nocart ? (\r\n                <table>\r\n                  <thead>\r\n                    <tr>\r\n                      <th>Name</th>\r\n                      <th>Price</th>\r\n                      <th>Qty</th>\r\n                      <th>Add</th>\r\n                      <th>Remove</th>\r\n                  \r\n                    </tr>\r\n                  </thead>\r\n                  <tbody>\r\n                    {this.state.cart.map(item => {\r\n                      return (\r\n                        <tr>\r\n                          <td>{item.name}</td>\r\n                          <td> {item.price}</td>\r\n                          <td> {item.quantity}</td>\r\n                          <td>\r\n                            {\" \"}\r\n                            <button\r\n                              type=\"button\"\r\n                              onClick={this.addToCart.bind(this, item)}\r\n                            >\r\n                              +\r\n                            </button>\r\n                          </td>\r\n                          <td>\r\n                            {\" \"}\r\n                            <button\r\n                              type=\"button\"\r\n                              onClick={this.RemoveCart.bind(this, item)}\r\n                              disabled={item.quantity < 1}\r\n                            >\r\n                              -\r\n                            </button>\r\n                          </td>\r\n                        </tr>\r\n                      );\r\n                    })}\r\n                  </tbody>\r\n                  <h2>Total: {this.state.total}</h2>\r\n\r\n                  <button type=\"button\" onClick={this.onClearArray}>\r\n                    Clear Cart\r\n                  </button>\r\n                </table>\r\n              ) : (\r\n                <h1 style={{fontStyle: \"italic\" ,color: \"#075979\"}}>your cart is empty</h1>\r\n              )}\r\n            </Drawer>\r\n          </div>\r\n        </header>\r\n\r\n        <div\r\n          className=\" products-wrapper\"\r\n          style={{\r\n            background:\r\n              \"linear-gradient(to bottom right,#20183F 40%,#5555ff 100%)\"\r\n          }}\r\n        >\r\n          <div\r\n            transitionName=\"fadeIn\"\r\n            transitionEnterTimeout={500}\r\n            transitionLeaveTimeout={300}\r\n            component=\"div\"\r\n            className=\"products\"\r\n          >\r\n            {_users.map(item => (\r\n              <div className=\"container\">\r\n                <div className=\"product\">\r\n                  <div className=\"product-image\">\r\n                    <img src={item.image} />\r\n                  </div>\r\n                  <p className=\"product-name\">{item.name}</p>\r\n                  <p className=\"product-price\">{item.price}</p>\r\n\r\n                  <div className=\"product-action\">\r\n                    <button\r\n                      type=\"button\"\r\n                      onClick={this.addToCart.bind(this, item)}\r\n                    >\r\n                      Add to cart\r\n                    </button>\r\n                  </div>\r\n                </div>{\" \"}\r\n              </div>\r\n            ))}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default Main;\r\n","import React from \"react\";\r\n\r\nconst Footer = ( ) => {\r\n  return (\r\n    <footer>\r\n      \r\n      <h3 style={{ fontStyle:'italic'} }>\r\n      Shopping Cart Â©2019 Created by Deniz\r\n      </h3>\r\n    </footer>\r\n  );\r\n};\r\n\r\nexport default Footer","import React, { Component } from 'react';\n\nimport './App.css'\nimport Header from './header';\nimport Footer from './footer';\nclass App extends Component {\n  render() {\n    return (\n      <div>\n      <Header/> \n       <Footer/> \n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport 'antd/dist/antd.css';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\nserviceWorker.unregister();\n"],"sourceRoot":""}